% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ds_regression.R
\name{gge_fit}
\alias{gge_fit}
\title{Plot fitted values}
\usage{
gge_fit(data, model, y, x, n = 200, show.points = T, title = NULL,
  cat.var = NULL, cat.value = NULL, col.group = NULL, facet1 = NULL,
  facet1.ncol = NULL, facet2 = NULL, facet2.ncol = NULL, col.pch = NULL,
  subtitle = NULL, footnote = NULL, legend.position = NULL,
  legend.omit = F, title.position = "center", grid = T, ylim = NULL,
  xlim = NULL, xlab = NULL, ylab = NULL, scales = "fixed")
}
\arguments{
\item{data}{the original data set used to fit the model}

\item{model}{the output of either \code{\link{lm}} or the \code{\link{glm}} functions}

\item{y}{a string with the name of the dependent variable}

\item{x}{a string with the name of the independent variable that will be used to plotted in the x-axis.}

\item{n}{an integer, the number of points of \code{x} generated to produce the predicted/fitted values}

\item{show.points}{boolean, indicating if the points from the original data set must be plotted or not}

\item{cat.var}{a string with the name of the categorical variable whose value will be set in the parameter \code{cat.value}. It allows one to set the category to use to get the fitted/predicted values}

\item{cat.value}{string with the category of the variable described in the parameter \code{car.var}}

\item{col.group}{a string with the name of the categorical variable to produce the color code of the plot}

\item{facet1}{a string with the name of the categorical variable to generate the facets}

\item{facet1.ncol}{an integer, the number of columns of the facet. Used only when a single facet is used (\code{facet2=NULL})}

\item{facet2}{(same as facet1)}

\item{facet2.ncol}{an integer, the number of columns of the facet. Used only when a single facet is used (\code{facet2=NULL})}

\item{col.pch}{a string or rgb code. It will be used as color for the points when col.group is NULL}

\item{subtitle}{a string, the subtitle of the plot}

\item{footnote}{a string, the footnote of the plot}

\item{legend.position}{a string (\code{top}, \code{bottom}, \code{left}, \code{right} (Default))}

\item{legend.omit}{boolean, if the legend should be omitted or not}

\item{title.position}{a string (or an number) with \code{center} (or .5), \code{left} (or 0), or \code{right} (or 1)}

\item{scales}{used when facets are used. See \link{ggplot2::facet_wrap}}

\item{tittle}{a string, the title of the plot}
}
\value{
what is returnts...
}
\description{
This function plot the fitted value or the predicted probability given the model estimated using \code{\link{lm}} or \code{\link{glm}} and the original data.
}
\examples{

data = tibble::data_frame(x1 = rnorm(200,3,1),
                          x2 = rexp(200),
                          cat.var  = sample(c(0,1), 200, replace=T),
                          cat.var2 = sample(letters[1:4], 200, replace=T),
                          y = -10*x1*cat.var+rnorm(200,0,10) +
                              10*x2*(3*(cat.var2=='a') -3*(cat.var2=='b') +
                                     1*(cat.var2=='c') -1*(cat.var2=='d')))  \%>\%
    dplyr::mutate(cat.var=as.factor(cat.var)) 
model = lm(y ~ x1*cat.var+x2*cat.var2, data)

data \%>\% gge_fit(., model, 'y', 'x1')
data \%>\% gge_fit(., model, 'y', 'x2')
data \%>\% gge_fit(., model, 'y', 'x1', cat.var='cat.var', cat.value="0")
data \%>\% gge_fit(., model, 'y', 'x1', cat.var='cat.var2', cat.value="b")
data \%>\% gge_fit(., model, 'y', 'x1', cat.var='cat.var', cat.value="1", col.group='cat.var2')
data \%>\% gge_fit(., model, 'y', 'x2', cat.var='cat.var', cat.value="1", col.group="cat.var")
data \%>\% gge_fit(., model, 'y', 'x2', cat.var='cat.var', cat.value=c("0","1"), col.group="cat.var")
data \%>\% gge_fit(., model, 'y', 'x2', cat.var='cat.var2', cat.value=c("a","b"), col.group="cat.var2")
data \%>\% gge_fit(., model, 'y', 'x2', cat.var='cat.var2', cat.value=c("a","b", 'c','d'), col.group="cat.var2")
data \%>\% gge_fit(., model, 'y', 'x2', facet1="cat.var")
data \%>\% gge_fit(., model, 'y', 'x2', facet1="cat.var2")
data \%>\% gge_fit(., model, 'y', 'x2', facet1="cat.var2", facet1.ncol=1)
data \%>\% gge_fit(., model, 'y', 'x2', facet1="cat.var2", facet1.ncol=1, , cat.var='cat.var2', cat.value=c("a","b", 'c','d'), col.group="cat.var2")
data \%>\% gge_fit(., model, 'y', 'x2', facet1="cat.var2", facet2='cat.var')
data \%>\% gge_fit(., model, 'y', 'x2', facet1="cat.var2", facet2='cat.var')
## variable var.cat2 fixed at level 'a'
data \%>\% gge_fit(., model, 'y', 'x2', cat.var='cat.var', cat.value=c("0","1"), facet1="cat.var2", facet2='cat.var')
## variable var.cat fixed at level '0'
data \%>\% gge_fit(., model, 'y', 'x2', cat.var='cat.var2', cat.value=c("a","b", 'c','d'), col.group="cat.var2", facet1="cat.var2", facet2='cat.var')
}
